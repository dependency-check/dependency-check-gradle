/*
 * This file is part of dependency-check-gradle.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Copyright (c) 2015 Wei Ma. All Rights Reserved.
 */

ext {
    odcVersion = '5.3.2'
    slackWebhookVersion = '1.4.0'
    spockCoreVersion = '1.1-groovy-2.4'
}

group = 'org.owasp'
if (odcVersion.endsWith("-SNAPSHOT"))
    version = odcVersion
else
    version = "$odcVersion.1"

buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.11.0"
    }
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'project-report'
apply plugin: 'build-dashboard'
apply plugin: 'com.gradle.plugin-publish'

tasks.withType(GroovyCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

repositories {
    mavenLocal()
    maven {
        name 'OWASP dependency-check snapshot'
        url 'https://dependencycheck.jfrog.io/dependencycheck/libs-snapshot'
    }
    maven {
        name 'OWASP dependency-check release'
        url 'https://dependencycheck.jfrog.io/dependencycheck/libs-release'
    }
    mavenCentral()
    jcenter()
}

dependencies {
    implementation(
            localGroovy(),
            gradleApi(),
            "org.owasp:dependency-check-core:$odcVersion",
            "org.owasp:dependency-check-utils:$odcVersion",
            "net.gpedro.integrations.slack:slack-webhook:$slackWebhookVersion"
    )

    testImplementation gradleTestKit()
    testImplementation("org.spockframework:spock-core:$spockCoreVersion") {
        exclude module: 'groovy-all'
    }
}

sourceSets {
    integTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task integTest(type: Test) {
    group = 'verification'
    mustRunAfter test
    testClassesDirs = sourceSets.integTest.output.classesDirs
    classpath = sourceSets.integTest.runtimeClasspath
    jvmArgs '-Xmx1024m'
}

gradlePlugin {
    testSourceSets sourceSets.integTest
}

//// ./gradlew uploadArchives
//apply from: 'conf/publish/maven.gradle'
//// ./gradlew publishPlugins
//apply from: 'conf/publish/gradlePluginsPortal.gradle'
//apply from: 'conf/publish/bintray.gradle'        // according to the documentation of plugindev, this line has to be placed and the very end of the build file

defaultTasks 'build'
